//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowDance.Examples.TripBookingSaga.HotelService.FlightService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightService.IFlight")]
    public interface IFlight {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/BookFlight", ReplyAction="http://tempuri.org/IFlight/BookFlightResponse")]
        void BookFlight(string passportNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/BookFlight", ReplyAction="http://tempuri.org/IFlight/BookFlightResponse")]
        System.Threading.Tasks.Task BookFlightAsync(string passportNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightChannel : FlowDance.Examples.TripBookingSaga.HotelService.FlightService.IFlight, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightClient : System.ServiceModel.ClientBase<FlowDance.Examples.TripBookingSaga.HotelService.FlightService.IFlight>, FlowDance.Examples.TripBookingSaga.HotelService.FlightService.IFlight {
        
        public FlightClient() {
        }
        
        public FlightClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void BookFlight(string passportNumber) {
            base.Channel.BookFlight(passportNumber);
        }
        
        public System.Threading.Tasks.Task BookFlightAsync(string passportNumber) {
            return base.Channel.BookFlightAsync(passportNumber);
        }
    }
}
